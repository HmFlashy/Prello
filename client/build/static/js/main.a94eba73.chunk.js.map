{"version":3,"sources":["config/UrlConfig.js","config/HeaderHelper.js","services/ListServices.js","services/CardServices.js","redux/actions/CardActions.js","components/App/Card/CardOverview/CardOverview.jsx","redux/actions/BoardActions.js","containers/CardContainers/CardContainerServices.js","containers/CardContainers/CardOverviewContainer.js","components/App/List/List.jsx","containers/ListContainers/ListContainer.js","redux/actions/ListActions.js","components/App/List/NewList/NewList.jsx","containers/ListContainers/NewListContainer.js","components/App/Card/CardDetail/SubComponents/Menu/Menu.jsx","components/App/Card/CardDetail/SubComponents/Members/Members.jsx","components/App/Card/CardDetail/SubComponents/Labels/Labels.jsx","components/App/Card/CardDetail/SubComponents/DueDate/DueDate.jsx","components/App/Card/CardDetail/SubComponents/Attachments/Attachments.jsx","components/App/Card/CardDetail/SubComponents/CheckList/CheckList.jsx","components/App/Card/CardDetail/SubComponents/Comment/Comment.jsx","components/App/Card/CardDetail/SubComponents/Activity/Activity.jsx","components/App/Card/CardDetail/SubComponents/Description/Description.jsx","components/App/Card/CardDetail/SubComponents/Header/Header.jsx","components/App/Card/CardDetail/CardDetail.jsx","containers/CardContainers/CardDetailContainer.js","components/App/Board/Board/Board.jsx","services/SocketService.js","services/BoardServices.js","containers/BoardContainer/BoardContainer.js","components/App/Board/BoardOverview/BoardOverview.jsx","containers/BoardContainer/BoardOverviewContainer.js","components/App/Board/ListBoards/ListBoards.jsx","containers/BoardContainer/ListBoardContainer.js","components/App/Header/Header.jsx","history.js","redux/reducers/CardReducer.js","redux/reducers/BoardReducer.js","redux/reducers/ListReducer.js","redux/reducers/CardModalReducer.js","redux/reducers/RootReducer.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","API","process","SOCKET","tokenHeader","Access-Control-Allow-Origin","ListServices","updateListNameApi","_updateListNameApi","Object","asyncToGenerator","regenerator_default","a","mark","_callee","listId","newName","res","wrap","_context","prev","next","axios","put","concat","UrlConfig","name","sent","abrupt","data","t0","console","log","stop","this","_x","_x2","apply","arguments","addListApi","_addListApi","_callee2","boardID","_context2","post","boardId","_x3","_x4","CardServices","fetchCard","_fetchCard","cardId","get","updateCardApi","_updateCardApi","toUpdate","addCardApi","_addCardApi","_callee3","_context3","_x5","actionFetchingCard","type","payload","actionCardFetched","card","CardOverview","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","textToTextInput","bind","assertThisInitialized","updateName","displayCardModal","state","isNameUpdating","event","stopPropagation","setState","props","updateCard","_id","history","push","_this2","react_default","createElement","Segment","className","onClick","placeholder","onKeyPress","charCode","target","value","color","Component","actionBoardSubscribe","socket","actionFetchingBoard","id","actionBoardFetched","board","actionBoardsFetched","boards","CardContainerServices","dispatch","cardServices","failedActionGetCard","_updateCard","withRouter","connect","ownProps","cardReducer","cards","find","actionDisplayCardModal","cardOverview","MyList","list","Container","List","map","Item","CardOverviewContainer","key","onKeyDown","keyCode","addCard","listReducer","lists","onwProps","updateListName","_updateListName","listServices","_addCard","NewList","addList","boardReducer","currentBoard","_addList","newList","Menu","Button","Group","vertical","size","compact","icon","labelPosition","Icon","Divider","Members_Members","Labels_Labels","labels","label","style","background","DueDate_DueDate","isCompleted","date","Attachments_Attachments","attachments","attachment","Image","src","url","dateadded","CheckList_CheckList","checklists","checklist","title","Progress","total","items","length","percent","filter","item","isChecked","indicating","progress","Form","Checkbox","checked","Comment_Comment","Field","TextArea","rows","Activity_Activity","Description_Description","description","SubComponents_Header_Header","CardDetail","descriptionTextArea","width","height","updateWindowDimensions","match","params","window","addEventListener","removeEventListener","innerWidth","innerHeight","members","duedate","desc","onSubmit","onChange","SubComponents_Menu_Menu","Loader","cardModalReducer","Board","subscribe","fetchBoard","ListContainer","NewListContainer","Modal","open","cardModal","onClose","closeCardModal","Content","image","CardDetailContainer","io","urlConfig","on","error","SocketService","emit","init","store","action","BoardServices","_fetchBoard","fetchBoards","_fetchBoards","socketService","_board","boardServices","_board2","BoardOverview","Link","to","ListBoards","BoardOverviewContainer","listBoards","Header","inverted","Dropdown","text","floating","labeled","button","content","Search","results","options","createBrowserHistory","defaultCardReducer","defaultBoardReducer","fetching","defaultListReducer","defaultCardModalReducer","combineReducers","undefined","objectSpread","flatMap","toConsumableArray","dueDate","dueDateCompleted","pos","isArchived","App","es","createStore","connectRouter","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","routerMiddleware","thunk","socketIO","configureStore","connected_react_router_lib","components_App_Header_Header","Switch","Route","exact","path","component","ListBoardContainer","BoardContainer","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a94eba73.chunk.js","sourcesContent":["module.exports = {\n    API: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\n    SOCKET: process.env.REACT_APP_SOCKET_URL || \"http://localhost:5000\"\n}","\nexport const basicHeader = {\n    'Access-Control-Allow-Origin': '*',\n}\n\nexport const tokenHeader = {\n    'Access-Control-Allow-Origin': '*',\n}","import axios from 'axios'\nimport UrlConfig from '../config/UrlConfig'\nimport { tokenHeader } from '../config/HeaderHelper'\n\nexport default {\n    async updateListNameApi(listId, newName) {\n        try {\n            const res = await axios.put(`${UrlConfig.API}/lists/${listId}`, {\n                name: newName\n            }, tokenHeader );\n            return res.data\n        } catch (err) {\n            console.log(err);\n            throw err\n        }\n    },\n    async addListApi(name, boardID){\n        try {\n            const res = await axios.post(`${UrlConfig.API}/lists`, {\n                name: name,\n                boardId: boardID\n            }, tokenHeader );\n            return res.data\n        } catch(error) {\n            throw error\n        }\n    }\n}","import axios from 'axios'\nimport UrlConfig from '../config/UrlConfig'\nimport { tokenHeader } from '../config/HeaderHelper'\n\nexport default {\n    async fetchCard(cardId) {\n        try {\n            const res = await axios.get(`${UrlConfig.API}/cards/${cardId}`, tokenHeader)\n            return res.data\n        } catch (e) {\n            console.log(e)\n            throw e\n        }\n    }, async updateCardApi(cardId, toUpdate) {\n        try {\n            const res = await axios.put(`${UrlConfig.API}/cards/${cardId}`, toUpdate, tokenHeader)\n            return res.data\n        } catch (error) {\n            throw error\n        }\n    },\n    async addCardApi(name, listId) {\n        try {\n            const res = await axios.post(`${UrlConfig.API}/cards`, {\n                name: name,\n                listId: listId\n            }, tokenHeader)\n            return res.data\n        } catch (error) {\n            throw error\n        }\n    }\n}","export const actionUpdateCardName = (card) => {\n    return {\n        type: 'UPDATE_CARD_NAME',\n        payload: card\n    }\n}\n\nexport const failedActionUpdateCardName = (error) => {\n    return {\n        type: 'FAILED_UPDATE_CARD_NAME',\n        payload: error\n    }\n}\n\nexport const actionCardNameUpdated = (card) => {\n    return {\n        type: 'CARD_NAME_UPDATED',\n        payload: card\n    }\n}\n\nexport const failedActionGetCard = (error) => {\n    return {\n        type: 'FAILED_GET_CARD',\n        payload: error\n    }\n}\n\nexport const failedActionAddCard = (error) => {\n    return {\n        type: 'FAILED_ADD_CARD',\n        payload: error\n    }\n}\n\nexport const actionFetchingCard = (cardId) => {\n    return {\n        type: 'CARD_FETCHING',\n        payload: cardId\n    }\n}\n\nexport const actionCardFetched = (card) => {\n    return {\n        type: 'CARD_FETCHED',\n        payload: card\n    }\n}\n\nexport const actionFailedCardFetched = (error) => {\n    return {\n        type: 'CARD_FAILED_FETCH',\n        payload: error\n    }\n}\n","import React, { Component } from 'react';\nimport './CardOverview.css'\nimport { Segment, Container } from 'semantic-ui-react'\n\n\nclass CardOverview extends Component {\n\n    constructor() {\n        super()\n        this.textToTextInput = this.textToTextInput.bind(this)\n        this.updateName = this.updateName.bind(this)\n        this.displayCardModal = this.displayCardModal.bind(this)\n        this.state = {\n            isNameUpdating: false\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    textToTextInput(event) {\n        event.stopPropagation()\n        this.setState({\n            isNameUpdating: true\n        })\n    }\n\n    updateName(name) {\n        this.setState({\n            isNameUpdating: false\n        })\n        this.props.updateCard(this.props.card._id, { name })\n    }\n\n    displayCardModal() {\n        console.log(this.props)\n        this.props.history.push(`/card/${this.props.card._id}`)\n        this.props.displayCardModal(this.props.card._id)\n    }\n\n    render() {\n        return (\n            <Segment className='cardOverview' onClick={this.displayCardModal}>\n                <p onClick={this.textToTextInput}>\n                    {!this.state.isNameUpdating ? this.props.card.name : <input type=\"text\" name=\"name\" placeholder={this.props.card.name} onKeyPress={(event) => event.charCode === 13 ? this.updateName(event.target.value) : null}></input>}\n                </p>\n                <span className='pos' color=\"textSecondary\">\n                    adjective\n                </span>\n            </Segment>\n        )\n    }\n}\n\nexport default CardOverview\n","export const actionBoardSubscribe = (socket) => {\n    return {\n        type: 'BOARD_SUBSCRIBE',\n        payload: socket\n    }\n}\n\nexport const actionFetchingBoard = (id) => {\n    return {\n        type: 'FETCHING_BOARD',\n        payload: id\n    }\n}\n\nexport const actionFailedFetchBoard = (error) => {\n    return {\n        type: 'FAILED_FETCH_BOARD',\n        payload: error\n    }\n}\n\nexport const actionBoardFetched = (board) => {\n    return {\n        type: 'FETCHED_BOARD',\n        payload: board\n    }\n}\n\nexport const actionFetchingBoards = () => {\n    return {\n        type: 'FETCHING_BOARDS',\n        payload: null\n    }\n}\n\nexport const actionFailedFetchBoards = (error) => {\n    return {\n        type: 'FAILED_FETCH_BOARDS',\n        payload: error\n    }\n}\n\nexport const actionBoardsFetched = (boards) => {\n    return {\n        type: 'FETCHED_BOARDS',\n        payload: boards\n    }\n}\n\nexport const actionDisplayCardModal = (cardId) => {\n    return {\n        type: 'DISPLAY_CARD_MODAL',\n        payload: cardId\n    }\n}\n\nexport const actionCloseCardModal = () => {\n    return {\n        type: 'CLOSE_CARD_MODAL',\n        payload: null\n    }\n}","import cardServices from '../../services/CardServices'\r\nimport { actionCardFetched, failedActionGetCard, failedActionUpdateCardName } from '../../redux/actions/CardActions'\r\n\r\nexport default {\r\n    async fetchCard(cardId, dispatch) {\r\n        try {\r\n            const card = await cardServices.fetchCard(cardId)\r\n            return dispatch(actionCardFetched(card))\r\n        } catch (error) {\r\n            return dispatch(failedActionGetCard())\r\n        }\r\n    },\r\n    async updateCard(cardId, data, dispatch) {\r\n        try {\r\n            await cardServices.updateCardApi(cardId, data)\r\n        } catch (error) {\r\n            console.log(error)\r\n            return dispatch(failedActionUpdateCardName(error))\r\n        }\r\n    }\r\n}","import cardOverview from '../../components/App/Card/CardOverview'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport cardServices from '../../services/CardServices'\nimport { actionDisplayCardModal } from '../../redux/actions/BoardActions'\nimport CardContainerServices from \"./CardContainerServices\"\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        card: state.cardReducer.cards.find(card => ownProps.cardId === card._id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        async updateCard(cardId, data) {\n            CardContainerServices.updateCard(cardId, data, dispatch)\n        },\n        displayCardModal(cardId) {\n            dispatch(actionDisplayCardModal(cardId))\n        }\n    }\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(cardOverview));","import React, { Component } from 'react';\nimport CardOverviewContainer from '../../../containers/CardContainers/CardOverviewContainer';\nimport { Segment, Container, List } from 'semantic-ui-react'\nimport './List.css'\n\nclass MyList extends Component {\n\n    render() {\n        return (\n            <Segment className='myList'>\n                <h3>{this.props.list.name}</h3>\n                <Container className='items'>\n                    <List >\n                        {this.props.list.cards.map(cardId => (\n                            <List.Item><CardOverviewContainer key={cardId} cardId={cardId} /></List.Item>\n                        ))}\n                    </List>\n                </Container>\n                <input onKeyDown={(event) => event.keyCode === 13 ? this.props.addCard(event.target.value, this.props.list._id) : null}></input>\n            </Segment>\n        )\n    }\n}\n\nexport default MyList","import { connect } from 'react-redux';\nimport listServices from '../../services/ListServices'\nimport cardServices from '../../services/CardServices'\nimport {actionUpdateListName, failedActionUpdateListName} from '../../redux/actions/ListActions'\nimport { failedActionAddCard } from '../../redux/actions/CardActions'\nimport list from '../../components/App/List/index'\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        list: state.listReducer.lists.find(list => list._id === ownProps.listId)\n    }\n};\n\nconst mapDispatchToProps = (dispatch, onwProps) => {\n    return {\n        async updateListName(list) {\n            try {\n                await listServices.updateListNameApi(list._id, list.name)\n            } catch(error) {\n                dispatch(failedActionUpdateListName(error))\n            }\n        },\n        async addCard(name, listId) {\n            try {\n                await cardServices.addCardApi(name, listId)\n            } catch(error) {\n                console.log(error)\n                return dispatch(failedActionAddCard(error))\n            }\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(list);","export const actionUpdateListName = (list) => {\n    return {\n        type: 'UPDATE_LIST_NAME',\n        payload: list\n    }\n}\n\nexport const failedActionUpdateListName = (error) => {\n    return {\n        type: 'FAILED_UPDATE_LIST_NAME',\n        payload: error\n    }\n}\n\nexport const actionAddList = (list) => {\n    return {\n        type: 'ADD_LIST',\n        payload: list\n    }\n}\n\nexport const failedActionAddList = (error) => {\n    return {\n        type: 'FAILED_ADD_LIST',\n        payload: error\n    }\n}","import React, { Component } from 'react';\nimport { Segment, Container, List } from 'semantic-ui-react'\nimport './NewList.css'\n\nclass NewList extends Component {\n\n    render(){\n        return (\n            <Segment className='myList'>\n                <input placeholder=\"Create a new list\" onKeyDown={(event) => event.keyCode === 13 ? this.props.addList(event.target.value, this.props.boardId) : null }></input>\n            </Segment>\n        )\n    }\n}\n\nexport default NewList","import { connect } from 'react-redux';\nimport listServices from '../../services/ListServices'\nimport { failedActionAddList } from '../../redux/actions/ListActions'\nimport newList from '../../components/App/List/NewList'\n\nconst mapStateToProps = state => {\n    console.log(state.boardReducer.currentBoard._id)\n    return {\n        boardId: state.boardReducer.currentBoard._id\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        async addList(name, boardId) {\n            try {\n                await listServices.addListApi(name, boardId)\n            } catch(error) {\n                console.log(error)\n                dispatch(failedActionAddList(error))\n            }\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(newList);","import React, { Component } from 'react';\r\nimport './Menu.css'\r\nimport { Button, Icon, Divider } from 'semantic-ui-react'\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p>Ajouter a la carte</p>\r\n                    <Button.Group vertical size='medium' compact>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='users' />\r\n                            Members\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='tag' />\r\n                            Labels\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='check square outline' />\r\n                            Checklist\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='calendar check' />\r\n                            Due date\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='paperclip' />\r\n                            Attachments\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n                <Divider />\r\n                <div>\r\n                    <p>Actions</p>\r\n                    <Button.Group vertical size='medium' compact>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='arrow right' />\r\n                            Move\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='copy' />\r\n                            Copy\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='eye' />\r\n                            Watch\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='archive' />\r\n                            Archive\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='share' />\r\n                            Share\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Menu","import React from 'react';\r\nimport './Members.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        <p>Members</p>\r\n        <Icon name='plus' />\r\n    </div>\r\n)","import React from 'react';\r\nimport './Labels.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        <p>Labels</p>\r\n        <div className=\"displayRow\">\r\n            {props.labels.map(label => <p className=\"label\" style={{ background: label.color }}>{label.name}</p>)}\r\n            <Icon name='plus' />\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './DueDate.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        <p>Due date</p>\r\n        <div className=\"displayRow\">\r\n            <Icon name={props.isCompleted ? 'calendar check' : 'window close outline'} />\r\n            <p>{props.date}</p>\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Attachments.css'\r\nimport { Image, Button, Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='paperclip' />\r\n        <div>\r\n            <p>Attachments</p>\r\n            {props.attachments.map(attachment =>\r\n                <div className=\"attachment\">\r\n                    <div className='image'>\r\n                        <Image src={attachment.url} size='mini' />\r\n                    </div>\r\n                    <div>\r\n                        <p>{attachment.name}</p>\r\n                        <div className=\"displayRow\">\r\n                            <p>{attachment.dateadded}</p>\r\n                            <Button>Comment</Button>\r\n                            <Button>Delete</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n            }\r\n            <Button>Add attachment</Button>\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './CheckList.css'\r\nimport { Progress, Form, Button, Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        {props.checklists.map(checklist =>\r\n            <div className=\"checklist displayRow\">\r\n                <Icon name='check square outline' />\r\n                <div className=\"progress\">\r\n                    <p className=\"title\">{checklist.title} <Button>Delete</Button></p>\r\n                    <Progress total={checklist.items.length} percent={checklist.items.filter(item => item.isChecked).length / checklist.items.length * 100} indicating size='tiny' progress />\r\n                    <div>{checklist.items.map(item => <Form.Checkbox checked={item.isChecked} label={item.name} />)}</div>\r\n                    <Button className=\"addItem\">Add item</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n\r\n        {console.log(props)}\r\n    </div>\r\n)","import React from 'react';\r\nimport './Comment.css'\r\nimport { Form, TextArea, Button, Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='comment outline' />\r\n        <Form className=\"form\">\r\n            <p>\r\n                Add comment\r\n                            </p>\r\n            <Form.Field>\r\n                <TextArea rows={2} placeholder='Write a comment...' />\r\n            </Form.Field>\r\n            <Button type='submit'>Submit</Button>\r\n        </Form>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Activity.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='tasks' />\r\n        <p>Activity</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Description.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='align left' />\r\n        <div>\r\n            <p>Description</p>\r\n            <p onClick={props.textToTextInput}>\r\n                {props.description}\r\n            </p>\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Header.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='file alternate outline' />\r\n\r\n        <div>\r\n            <p>\r\n                {props.name}\r\n            </p>\r\n            <p>\r\n                to list {props.list}\r\n            </p>\r\n        </div>\r\n    </div>\r\n)","import React, { Component } from 'react';\r\nimport './CardDetail.css'\r\nimport { TextArea, Icon, Divider, Form, Button, Loader } from 'semantic-ui-react'\r\nimport Menu from \"./SubComponents/Menu\"\r\nimport Members from \"./SubComponents/Members\"\r\nimport Labels from \"./SubComponents/Labels\"\r\nimport DueDate from \"./SubComponents/DueDate\"\r\nimport Attachments from './SubComponents/Attachments';\r\nimport CheckList from './SubComponents/CheckList';\r\nimport Comment from './SubComponents/Comment';\r\nimport Activity from './SubComponents/Activity';\r\nimport Description from './SubComponents/Description';\r\nimport Header from './SubComponents/Header';\r\n\r\nclass CardDetail extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.textToTextInput = this.textToTextInput.bind(this)\r\n        this.updateCard = this.updateCard.bind(this)\r\n        this.state = {\r\n            descriptionTextArea: \"\",\r\n            isNameUpdating: false,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchCard(this.props.match.params.cardId)\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        console.log(window.innerWidth)\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n\r\n    textToTextInput() {\r\n        this.setState({\r\n            isNameUpdating: true\r\n        })\r\n    }\r\n\r\n    updateCard(data) {\r\n        this.props.updateCard(this.props.card._id, data)\r\n    }\r\n\r\n    render() {\r\n        return this.props.card.name != null ?\r\n            <div className=\"displayColumn main\">\r\n                <Header name={this.props.card.name} list={this.props.card.list} ></Header>\r\n                <Divider />\r\n                <div className={this.state.width > 600 ? \"displayRow main\" : \"main\"}>\r\n                    <div className=\"details main\">\r\n                        {(this.props.card.members && this.props.card.members.length !== 0) || (this.props.card && this.props.card.labels.length !== 0) || this.props.card.duedate\r\n                            ? <div>\r\n                                <div className=\"inline\">\r\n                                    <Icon name='tags' />\r\n                                    {this.props.card.members && this.props.card.members.length !== 0\r\n                                        ? <Members className=\"membersContainer\" members={this.props.card.members}></Members>\r\n                                        : \"\"}\r\n                                    {this.props.card.labels && this.props.card.labels.length !== 0\r\n                                        ? <Labels className=\"labelsContainer\" labels={this.props.card.labels}></Labels>\r\n                                        : \"\"}\r\n                                    {this.props.card.duedate\r\n                                        ? <DueDate className=\"duedateContainer\" date={this.props.card.duedate} isCompleted={false}></DueDate>\r\n                                        : \"\"}\r\n                                </div>\r\n                                <Divider />\r\n                            </div>\r\n                            : \"\"}\r\n                        {this.props.card.desc\r\n                            ? <div>\r\n                                <Description description={this.props.card.desc}></Description>\r\n                                <Divider />\r\n                            </div>\r\n                            : <div>\r\n                                <div className={\"displayRow\"}>\r\n                                    <Icon name='align left' />\r\n                                    <Form className=\"form\" onSubmit={() => this.updateCard({ desc: this.state.descriptionTextArea })}>\r\n                                        <p>Describe me</p>\r\n                                        <Form.Field>\r\n                                            <TextArea onChange={(event, data) => this.setState({ descriptionTextArea: data.value })} rows={2} placeholder=\"Describe me...\" />\r\n                                        </Form.Field>\r\n                                        <Button type='submit'>Submit</Button>\r\n                                    </Form>\r\n                                </div>\r\n                                <Divider />\r\n                            </div>}\r\n\r\n                        {this.props.card.attachments && this.props.card.attachments.length !== 0\r\n                            ? <div>\r\n                                <Attachments className=\"attachmentsContainer\" attachments={this.props.card.attachments}></Attachments>\r\n                                <Divider />\r\n                            </div>\r\n                            : \"\"}\r\n                        {this.props.card.checklists && this.props.card.checklists.length !== 0\r\n                            ? <div>\r\n                                <CheckList className=\"checkListContainer\" checklists={this.props.card.checklists}></CheckList>\r\n                                <Divider />\r\n                            </div>\r\n                            : \"\"}\r\n                        <Comment></Comment>\r\n                        <Divider />\r\n                        <Activity></Activity>\r\n                    </div>\r\n                    <Menu />\r\n                </div>\r\n            </div>\r\n            : <Loader />\r\n    }\r\n}\r\n\r\nexport default CardDetail\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport CardDetail from '../../components/App/Card/CardDetail';\r\nimport CardContainerServices from \"./CardContainerServices\"\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        card: state.cardModalReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        async fetchCard(cardId) {\r\n            return await CardContainerServices.fetchCard(cardId, dispatch)\r\n        },\r\n        async updateCard(cardId, data) {\r\n            CardContainerServices.updateCard(cardId, data, dispatch)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CardDetail));","import React, { Component } from 'react';\nimport './Board.css'\nimport ListContainer from '../../../../containers/ListContainers/ListContainer';\nimport NewListContainer from '../../../../containers/ListContainers/NewListContainer';\nimport CardDetailContainer from '../../../../containers/CardContainers/CardDetailContainer'\nimport { List, Button, Modal } from 'semantic-ui-react'\n\nclass Board extends Component {\n\n    componentWillMount() {\n        this.props.subscribe()\n        const cardId = this.props.match.params.cardId\n        if(cardId != null){\n            this.props.fetchCard(cardId)\n        } else { \n            this.props.fetchBoard(this.props.match.params.boardId)\n        }\n\n        this.setState = {\n            cardId: this.props.match.params.cardId\n        }\n    }\n\n\n    render() {\n        return (\n            <List className='board'>\n                {this.props.board.lists.map(listId => (\n                    <List.Item className='no-padding-top'><ListContainer key={listId} listId={listId} /></List.Item>\n                ))}\n                <List.Item className='no-padding-top'><NewListContainer /></List.Item>\n\n                <Modal\n                    open={this.props.cardModal._id != null}\n                    onClose={() => {\n                        this.props.history.push(`/boards/${this.props.board._id}`)\n                        this.props.closeCardModal()\n                    }}>\n                    <Modal.Content image>\n                        <CardDetailContainer key={this.props.cardModal._id} cardId={this.props.cardModal._id}></CardDetailContainer>\n                    </Modal.Content>\n                </Modal>\n            </List>\n\n        );\n    }\n}\n\nexport default Board","\nimport io from 'socket.io-client';\nimport urlConfig from '../config/UrlConfig'\n\nconst socket = io(urlConfig.SOCKET)\n\nsocket.on(\"connect\", () => {\n    console.log(\"Connected !\")\n})\n\nsocket.on(\"error\", (error) => {\n    console.log(error)\n})\n\nexport default {\n    subscribe(boardId) {\n        socket.emit(\"subscribeToBoard\")\n    },\n    init( store ){\n        socket.on( \"action\", ( action ) => \n            store.dispatch(action) \n        )\n    },\n    emit( type, payload ) {\n        socket.emit( type, payload )\n    }\n}","import axios from 'axios'\nimport UrlConfig from '../config/UrlConfig'\nimport { tokenHeader } from '../config/HeaderHelper'\n\nexport default {\n    async fetchBoard(boardId) {\n        try{\n            const res = await axios.get(`${UrlConfig.API}/boards/${boardId}`, tokenHeader)\n            return res.data\n        } catch (e) {\n            console.log(e)\n            throw e\n        }    \n    },\n    async fetchBoards() {\n        try{\n            const res = await axios.get(`${UrlConfig.API}/boards`, tokenHeader)\n            return res.data\n        } catch (e) {\n            console.log(e)\n            throw e\n        }\n    }\n}","import board from '../../components/App/Board/Board'\nimport { connect } from 'react-redux';\nimport socketService from '../../services/SocketService'\nimport boardServices from '../../services/BoardServices'\nimport cardServices from '../../services/CardServices'\nimport { \n    actionBoardSubscribe, \n    actionFetchingBoard, \n    actionFailedFetchBoard, \n    actionBoardFetched,\n    actionCloseCardModal\n} from '../../redux/actions/BoardActions'\nimport { \n    actionFetchingCard,\n    actionCardFetched,\n    actionFailedCardFetched\n} from '../../redux/actions/CardActions'\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardReducer.currentBoard,\n        cardModal: state.cardModalReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        subscribe(){\n            socketService.subscribe()\n            dispatch(actionBoardSubscribe())\n        },\n        async fetchBoard(id){\n            try {\n                dispatch(actionFetchingBoard(id))\n                const board = await boardServices.fetchBoard(id)\n                dispatch(actionBoardFetched(board))\n            } catch(error) {\n                return dispatch(actionFailedFetchBoard(error))\n            }\n        },\n        async fetchCard(cardId){\n            try {\n                dispatch(actionFetchingCard(cardId))\n                const card = await cardServices.fetchCard(cardId)\n                dispatch(actionCardFetched(card))\n                dispatch(actionFetchingBoard(card.board))\n                const board = await boardServices.fetchBoard(card.board)\n                return dispatch(actionBoardFetched(board))\n            } catch(error){\n                return dispatch(actionFailedCardFetched(error))\n            }\n        },\n        closeCardModal(){\n            dispatch(actionCloseCardModal())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(board);","import React, { Component } from 'react';\nimport '../../Card/CardOverview/CardOverview'\nimport {List, Segment} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nclass BoardOverview extends Component {\n\n    componentWillMount(){\n        this.props.subscribe()\n    }\n\n    render(){\n        return (\n            <Segment className='cardOverview'>\n                <Link to={`/boards/${this.props.board._id}`}>\n                    {this.props.board ? this.props.board.name: \"\"}\n                </Link>\n            </Segment>\n        );\n    }\n}\n\nexport default BoardOverview","import BoardOverview from '../../components/App/Board/BoardOverview/BoardOverview'\nimport { connect } from 'react-redux';\nimport socketService from \"../../services/SocketService\";\nimport {actionBoardSubscribe} from \"../../redux/actions/BoardActions\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        board: state.boardReducer.boards.find(board => ownProps.boardId === board._id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        subscribe(){\n            socketService.subscribe()\n            dispatch(actionBoardSubscribe())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BoardOverview);","import React, {Component} from 'react';\nimport '../Board/Board.css'\nimport BoardOverviewContainer from '../../../../containers/BoardContainer/BoardOverviewContainer'\nimport {List} from 'semantic-ui-react'\n\nclass ListBoards extends Component {\n\n    componentWillMount() {\n        this.props.subscribe()\n        this.props.fetchBoards()\n    }\n\n    render() {\n        return (\n            <List className='board'>\n                {this.props.boards.map(boardId => (\n                    <List.Item className='no-padding-top'><BoardOverviewContainer key={boardId} boardId={boardId}/>\n                    </List.Item>\n                ))}\n            </List>\n        );\n    }\n}\n\nexport default ListBoards","import { connect } from 'react-redux';\nimport socketService from '../../services/SocketService'\nimport boardServices from '../../services/BoardServices'\nimport listBoards from '../../components/App/Board/ListBoards/ListBoards'\nimport { actionBoardSubscribe, actionFetchingBoards, actionFailedFetchBoards, actionBoardsFetched } from '../../redux/actions/BoardActions'\n\nconst mapStateToProps = state => {\n    return {\n        boards: state.boardReducer.boards.map(board => board._id)\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        subscribe(){\n            socketService.subscribe()\n            dispatch(actionBoardSubscribe())\n        },\n        async fetchBoards(){\n            try {\n                dispatch(actionFetchingBoards())\n                const boards = await boardServices.fetchBoards()\n                dispatch(actionBoardsFetched(boards))\n            } catch(error) {\n                return dispatch(actionFailedFetchBoards(error))\n            }\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(listBoards);","import React, { Component } from 'react';\r\nimport './Header.css'\r\nimport { Segment, Dropdown, Button, Search } from 'semantic-ui-react'\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Segment inverted color='teal' className=\"inline header\" size='mini'>\r\n                <div className=\"inline\">\r\n                    <Button icon='home' />\r\n                    <Dropdown text='Boards' icon='flipboard' floating labeled button className='icon'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header icon='tags' content='Boards' />\r\n                            <Dropdown.Item>Important</Dropdown.Item>\r\n                            <Dropdown.Item>Announcement</Dropdown.Item>\r\n                            <Dropdown.Item>Discussion</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Search results={[{ title: \"yo\", description: \"mdr\" }]} size=\"small\" className=\"search\"></Search>\r\n                </div>\r\n                <div>\r\n                    <p className=\"appname\">Prello</p>\r\n                </div>\r\n                <div className=\"inline\">\r\n                    <Dropdown\r\n                        button\r\n                        className='icon'\r\n                        floating\r\n                        labeled\r\n                        icon='plus'\r\n                        options={[{ key: 'Arabic', text: 'Arabic', value: 'Arabic' }]}\r\n                        text='Create'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header content='Create' />\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item>Create a board</Dropdown.Item>\r\n                            <Dropdown.Item>Create a team</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown\r\n                        button\r\n                        className='icon'\r\n                        floating\r\n                        labeled\r\n                        icon='bell outline'\r\n                        options={[{ key: 'Arabic', text: 'Arabic', value: 'Arabic' }]}\r\n                        text='Notifications'\r\n                    />\r\n                    <Dropdown\r\n                        button\r\n                        className='icon'\r\n                        floating\r\n                        labeled\r\n                        icon='user outline'\r\n                        text='User'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header content='name' />\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item>Profile</Dropdown.Item>\r\n                            <Dropdown.Item>Cards</Dropdown.Item>\r\n                            <Dropdown.Item>Settings</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item>Change language</Dropdown.Item>\r\n                            <Dropdown.Item>Log out</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import { createBrowserHistory } from 'history'\n\nlet history = createBrowserHistory()\n\nexport { history }","const defaultCardReducer = {\n  cards: []\n}\n\nexport default (state = defaultCardReducer, action) => {\n  switch (action.type) {\n    case \"FETCHED_BOARD\":\n      const board = action.payload\n      return {\n        ...state,\n        cards: board.lists.flatMap(list => list.cards)\n      }\n    case 'CARD_FETCHED':\n      return {\n        ...state,\n        card: action.payload.payload,\n        error: null\n      }\n    case 'FAILED_GET_CARD':\n      return {\n        ...state,\n        error: action.payload\n      }\n    case 'ADD_CARD':\n      const card = action.payload\n      return {\n        ...state,\n        cards: [...state.cards, card]\n\n      }\n    case 'UPDATE_CARD_NAME':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, name: action.payload.name } : card)\n      }\n    case 'UPDATE_CARD_DESC':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, desc: action.payload.desc } : card)\n      }\n    case 'UPDATE_CARD_DUEDATE':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, dueDate: action.payload.dueDate } : card)\n      }\n    case 'UPDATE_CARD_DUEDATECOMPLETED':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, dueDateCompleted: action.payload.dueDateCompleted } : card)\n      }\n    case 'UPDATE_CARD_LIST':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, list: action.payload.list } : card)\n      }\n    case 'UPDATE_CARD_BOARD':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, board: action.payload.board } : card)\n      }\n    case 'UPDATE_CARD_POS':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, pos: action.payload.pos } : card)\n      }\n    case 'UPDATE_CARD_ISARCHIVED':\n      return {\n        ...state,\n        cards: state.cards.map(card => card._id === action.payload._id ? { ...card, isArchived: action.payload.isArchived } : card)\n      }\n    default:\n      return state\n  }\n}","const defaultBoardReducer = {\n    fetching: false,\n    currentBoard: {\n        _id: \"\",\n        name: \"\",\n        lists: []\n    },\n    boards: [{\n        _id: 'board1',\n        name: 'tata'\n    },{\n        _id: 'board2',\n        name: 'toto'\n    }\n    ]\n}\n\nexport default (state = defaultBoardReducer, action) => {\n    switch (action.type) {\n        case \"FETCHED_BOARD\":\n            const board = action.payload\n            return {\n                ...state,\n                currentBoard: {\n                    ...board,\n                    lists: board.lists.map(list => list._id)\n                }\n            }\n        case \"FETCHING_BOARD\":\n            return {\n                ...state,\n                fetching: true\n            }\n        case \"FETCHED_BOARDS\":\n            return {\n                ...state,\n                boards: [...action.payload]\n            }\n        case \"FETCHING_BOARDS\":\n            return {\n                ...state,\n                fetching: true\n            }\n        case 'BOARD_SUBSCRIBE':\n            return {\n                ...state\n            }\n        case 'GET_BOARD':\n            return {\n                ...state,\n                currentBoard: action.payload,\n                error: null\n            }\n        case 'FAILED_FETCH_BOARD':\n            return {\n                ...state,\n                error: action.payload\n            }\n        case 'FAILED_FETCH_BOARDS':\n            return {\n                ...state,\n                error: action.payload\n            }\n        case 'ADD_LIST':\n            const list = action.payload\n            return {\n                ...state,\n                currentBoard: {\n                    ...state,\n                    lists: [...state.currentBoard.lists, list._id]}\n            }\n        case 'FAILED_UPDATE_LIST_NAME':\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","const defaultListReducer = {\n    lists: []\n}\n\nexport default (state = defaultListReducer, action) => {\n    switch (action.type) {\n        case \"FETCHED_BOARD\":\n            const board = action.payload\n            const lists = board.lists.map(list => ({\n                ...list,\n                cards: list.cards.map(card => card._id)\n            }))\n            return {\n                ...state,\n                lists: lists\n            }\n        case 'ADD_CARD':\n            const card = action.payload\n            return {\n                ...state,\n                lists: state.lists.map(list => card.list === list._id ? {\n                    ...list,\n                    cards: [ ...list.cards, card._id ]\n                 } : list)\n                \n            }\n        case 'ADD_LIST':\n            const list = action.payload\n            return {\n                ...state,\n                lists: [ ...state.lists, {\n                    ...list,\n                    cards: []\n                }]\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","const defaultCardModalReducer = {\n    _id: null\n}\n\nexport default (state = defaultCardModalReducer, action) => {\n    switch (action.type) {\n        case 'DISPLAY_CARD_MODAL':\n            return {\n                ...state,\n                _id: action.payload\n            }\n        case 'CARD_FETCHED':\n            return {\n                ...state,\n                ...action.payload\n            }\n        case 'CLOSE_CARD_MODAL':\n            return {\n                ...defaultCardModalReducer\n            }\n\n        case 'UPDATE_CARD_NAME':\n            return (state._id && state._id === action.payload._id) ?\n                ({\n                    ...state,\n                    name: action.payload.name\n                })\n                : state\n        case 'UPDATE_CARD_DESC':\n            return (state._id && state._id === action.payload._id) ?\n                ({\n                    ...state,\n                    desc: action.payload.desc\n                })\n                : state\n        case 'UPDATE_CARD_DUEDATE':\n            return {\n                ...state,\n                cards: state.cards.map(card => card._id === action.payload._id ? { ...card, dueDate: action.payload.dueDate } : card)\n            }\n        case 'UPDATE_CARD_DUEDATECOMPLETED':\n            return {\n                ...state,\n                cards: state.cards.map(card => card._id === action.payload._id ? { ...card, dueDateCompleted: action.payload.dueDateCompleted } : card)\n            }\n        case 'UPDATE_CARD_LIST':\n            return {\n                ...state,\n                cards: state.cards.map(card => card._id === action.payload._id ? { ...card, list: action.payload.list } : card)\n            }\n        case 'UPDATE_CARD_BOARD':\n            return {\n                ...state,\n                cards: state.cards.map(card => card._id === action.payload._id ? { ...card, board: action.payload.board } : card)\n            }\n        case 'UPDATE_CARD_POS':\n            return {\n                ...state,\n                cards: state.cards.map(card => card._id === action.payload._id ? { ...card, pos: action.payload.pos } : card)\n            }\n        case 'UPDATE_CARD_ISARCHIVED':\n            return {\n                ...state,\n                cards: state.cards.map(card => card._id === action.payload._id ? { ...card, isArchived: action.payload.isArchived } : card)\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\nimport cardReducer from './CardReducer';\nimport boardReducer from './BoardReducer';\nimport listReducer from './ListReducer';\nimport cardModalReducer from './CardModalReducer';\nexport default combineReducers({\n cardReducer,\n boardReducer,\n listReducer,\n cardModalReducer\n});","import React, { Component } from \"react\";\nimport { Route, Switch, Link, BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport BoardContainer from './containers/BoardContainer/BoardContainer';\nimport ListBoardContainer from \"./containers/BoardContainer/ListBoardContainer\";\nimport Header from \"./components/App/Header\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport { history } from './history'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './redux/store'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={configureStore()}>\n        <ConnectedRouter history={history}>\n          <div className=\"App\">\n            <Header className=\"header\" />\n            <Link to=\"/login\">Home</Link> <Link to=\"/\">About</Link> <Link to=\"/contact\">Contact</Link> <Link to=\"/boards\">Boards</Link>\n            <Switch>\n              <Route exact path=\"/login\" />\n              <Route exact path=\"/boards\" component={ListBoardContainer} />\n              <Route exact path=\"/boards/:boardId\" component={BoardContainer} />\n              <Route exact path=\"/card/:cardId\" component={BoardContainer} />\n              <Route path=\"\">\n                <div>\n                  <p className=\"App-intro\">Salut</p>\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nimport socketIO from '../services/SocketService'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { history } from '../history'\n\nexport default function configureStore(initialState={}) {\n    const store = createStore(\n        connectRouter(history)(rootReducer), \n        window.__REDUX_DEVTOOLS_EXTENSION__ ? \n            compose(\n                applyMiddleware(routerMiddleware(history), thunk), window.__REDUX_DEVTOOLS_EXTENSION__()\n            ) : \n            compose(\n                applyMiddleware(routerMiddleware(history), thunk)\n            )\n    );\n    socketIO.init(store)\n    return store\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'normalize.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}