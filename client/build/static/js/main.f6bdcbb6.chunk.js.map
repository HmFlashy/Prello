{"version":3,"sources":["config/UrlConfig.js","config/HeaderHelper.js","services/ListServices.js","services/CardServices.js","redux/actions/CardActions.js","components/App/Card/CardOverview/CardOverview.jsx","redux/actions/BoardActions.js","containers/CardContainers/CardOverviewContainer.js","components/App/List/List.jsx","containers/ListContainers/ListContainer.js","redux/actions/ListActions.js","components/App/List/NewList/NewList.jsx","containers/ListContainers/NewListContainer.js","components/App/Card/CardDetail/SubComponents/Menu/Menu.jsx","components/App/Card/CardDetail/SubComponents/Members/Members.jsx","components/App/Card/CardDetail/SubComponents/Labels/Labels.jsx","components/App/Card/CardDetail/SubComponents/DueDate/DueDate.jsx","components/App/Card/CardDetail/SubComponents/Attachments/Attachments.jsx","components/App/Card/CardDetail/SubComponents/CheckList/CheckList.jsx","components/App/Card/CardDetail/SubComponents/Comment/Comment.jsx","components/App/Card/CardDetail/SubComponents/Activity/Activity.jsx","components/App/Card/CardDetail/SubComponents/Description/Description.jsx","components/App/Card/CardDetail/SubComponents/Header/Header.jsx","components/App/Card/CardDetail/CardDetail.jsx","containers/CardContainers/CardDetailContainer.js","components/App/Board/Board/Board.jsx","services/SocketService.js","services/BoardServices.js","containers/BoardContainer/BoardContainer.js","components/App/Board/BoardOverview/BoardOverview.jsx","containers/BoardContainer/BoardOverviewContainer.js","components/App/Board/ListBoards/ListBoards.jsx","containers/BoardContainer/ListBoardContainer.js","components/App/Header/Header.jsx","history.js","App.js","serviceWorker.js","redux/reducers/CardReducer.js","redux/reducers/BoardReducer.js","redux/reducers/ListReducer.js","redux/reducers/CardModalReducer.js","redux/reducers/RootReducer.js","index.js","redux/store.js"],"names":["module","exports","API","process","SOCKET","tokenHeader","Access-Control-Allow-Origin","ListServices","updateListNameApi","_updateListNameApi","Object","asyncToGenerator","regenerator_default","a","mark","_callee","listId","newName","res","wrap","_context","prev","next","axios","put","concat","UrlConfig","name","sent","abrupt","data","t0","console","log","stop","this","_x","_x2","apply","arguments","addListApi","_addListApi","_callee2","boardID","_context2","post","_x3","_x4","CardServices","fetchCard","_fetchCard","cardId","get","updateCardNameApi","_updateCardNameApi","addCardApi","_addCardApi","_callee3","_context3","_x5","actionFetchingCard","type","payload","actionCardFetched","card","CardOverview","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","textToTextInput","bind","assertThisInitialized","updateName","displayCardModal","state","isNameUpdating","setState","props","_id","history","push","_this2","react_default","createElement","Segment","className","onClick","placeholder","onKeyPress","event","charCode","target","value","color","Component","actionBoardSubscribe","socket","actionFetchingBoard","id","actionBoardFetched","board","actionBoardsFetched","boards","withRouter","connect","ownProps","cardReducer","cards","find","dispatch","_updateName","cardServices","actionDisplayCardModal","cardOverview","MyList","list","Container","List","map","Item","CardOverviewContainer","key","onKeyDown","keyCode","addCard","listReducer","lists","onwProps","updateListName","_updateListName","listServices","_addCard","NewList","addList","boardId","boardReducer","currentBoard","_addList","newList","Menu","Button","Group","vertical","size","compact","icon","labelPosition","Icon","Divider","Members_Members","Labels_Labels","labels","label","style","background","DueDate_DueDate","isCompleted","date","Attachments_Attachments","attachments","attachment","Image","src","url","dateadded","CheckList_CheckList","checklists","checklist","title","Progress","total","items","length","percent","filter","item","isChecked","indicating","progress","Form","Checkbox","checked","Comment_Comment","Field","TextArea","rows","Activity_Activity","Description_Description","description","SubComponents_Header_Header","CardDetail","width","height","updateWindowDimensions","match","params","window","addEventListener","removeEventListener","innerWidth","innerHeight","members","duedate","desc","SubComponents_Menu_Menu","Loader","cardModalReducer","failedActionGetCard","Board","subscribe","fetchBoard","ListContainer","NewListContainer","Modal","open","cardModal","onClose","closeCardModal","Content","image","CardDetailContainer","io","urlConfig","on","error","SocketService","emit","init","store","action","BoardServices","_fetchBoard","fetchBoards","_fetchBoards","socketService","_board","boardServices","_board2","BoardOverview","Link","to","ListBoards","BoardOverviewContainer","listBoards","Header","inverted","Dropdown","text","floating","labeled","button","content","Search","results","options","createBrowserHistory","App","connected_react_router_lib","components_App_Header_Header","Switch","Route","exact","path","component","ListBoardContainer","BoardContainer","Boolean","location","hostname","defaultCardReducer","defaultBoardReducer","fetching","defaultListReducer","defaultCardModalReducer","combineReducers","undefined","objectSpread","flatMap","toConsumableArray","ReactDOM","render","es","createStore","connectRouter","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","routerMiddleware","thunk","socketIO","configureStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6bdcbb6.chunk.js","sourcesContent":["module.exports = {\n    API: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\n    SOCKET: process.env.REACT_APP_SOCKET_URL || \"http://localhost:5000\"\n}","\nexport const basicHeader = {\n    'Access-Control-Allow-Origin': '*',\n}\n\nexport const tokenHeader = {\n    'Access-Control-Allow-Origin': '*',\n}","import axios from 'axios'\nimport UrlConfig from '../config/UrlConfig'\nimport { tokenHeader } from '../config/HeaderHelper'\n\nexport default {\n    async updateListNameApi(listId, newName) {\n        try {\n            const res = await axios.put(`${UrlConfig.API}/lists/${listId}`, {\n                name: newName\n            }, tokenHeader );\n            return res.data\n        } catch (err) {\n            console.log(err);\n            throw err\n        }\n    },\n    async addListApi(name, boardID){\n        try {\n            const res = await axios.post(`${UrlConfig.API}/lists`, {\n                name: name,\n                boardID: boardID\n            }, tokenHeader );\n            return res.data\n        } catch(error) {\n            throw error\n        }\n    }\n}","import axios from 'axios'\nimport UrlConfig from '../config/UrlConfig'\nimport { tokenHeader } from '../config/HeaderHelper'\n\nexport default {\n    async fetchCard(cardId) {\n        try{\n            const res = await axios.get(`${UrlConfig.API}/cards/${cardId}`, tokenHeader)\n            return res.data\n        } catch (e) {\n            console.log(e)\n            throw e\n        }    \n    },\n    async updateCardNameApi(cardId, name) {\n        try {\n            const res = await axios.put(`${UrlConfig.API}/cards/${cardId}`, {\n                name: name\n            }, tokenHeader)\n            return res.data\n        } catch(error) {\n            throw error\n        }\n    },\n    async addCardApi(name, listId) {\n        try {\n            const res = await axios.post(`${UrlConfig.API}/cards`, {\n                name: name,\n                listId: listId\n            }, tokenHeader)\n            return res.data\n        } catch(error) {\n            throw error\n        }\n    }\n}","export const actionUpdateCardName = (card) => {\n    return {\n        type: 'UPDATE_CARD_NAME',\n        payload: card\n    }\n}\n\nexport const failedActionUpdateCardName = (error) => {\n    return {\n        type: 'FAILED_UPDATE_CARD_NAME',\n        payload: error\n    }\n}\n\nexport const actionCardNameUpdated = (card) => {\n    return {\n        type: 'CARD_NAME_UPDATED',\n        payload: card\n    }\n}\n\nexport const failedActionGetCard = (error) => {\n    return {\n        type: 'FAILED_GET_CARD',\n        payload: error\n    }\n}\n\nexport const failedActionAddCard = (error) => {\n    return {\n        type: 'FAILED_ADD_CARD',\n        payload: error\n    }\n}\n\nexport const actionFetchingCard = (cardId) => {\n    return {\n        type: 'CARD_FETCHING',\n        payload: cardId\n    }\n}\n\nexport const actionCardFetched = (card) => {\n    return {\n        type: 'CARD_FETCHED',\n        payload: card\n    }\n}\n\nexport const actionFailedCardFetched = (error) => {\n    return {\n        type: 'CARD_FAILED_FETCH',\n        payload: error\n    }\n}\n","import React, { Component } from 'react';\nimport './CardOverview.css'\nimport { Segment, Container } from 'semantic-ui-react'\n\n\nclass CardOverview extends Component {\n\n    constructor(){\n        super()\n        this.textToTextInput = this.textToTextInput.bind(this)\n        this.updateName = this.updateName.bind(this)\n        this.displayCardModal = this.displayCardModal.bind(this)\n        this.state = {\n            isNameUpdating: false\n        }\n    }\n\n    componentDidMount(){\n    }\n\n    textToTextInput(){\n        this.setState({\n            isNameUpdating: true\n        })\n    }\n\n    updateName(name){\n        this.setState({\n            isNameUpdating: false\n        })\n        this.props.updateName(this.props.card._id, name)\n    }\n\n    displayCardModal(){\n        console.log(this.props)\n        this.props.history.push(`/card/${this.props.card._id}`)\n        this.props.displayCardModal(this.props.card._id)\n    }\n\n    render(){\n        return (\n            <Segment className='cardOverview' onClick={this.displayCardModal}>\n                <p onClick={this.textToTextInput}>\n                    { !this.state.isNameUpdating ? this.props.card.name : <input type=\"text\" name=\"name\" placeholder= {this.props.card.name} onKeyPress={(event) => event.charCode === 13 ? this.updateName(event.target.value) : null}></input> }\n                </p>\n                <span className='pos' color=\"textSecondary\">\n                    adjective\n                </span>\n            </Segment>\n        )\n    }\n}\n\nexport default CardOverview\n","export const actionBoardSubscribe = (socket) => {\n    return {\n        type: 'BOARD_SUBSCRIBE',\n        payload: socket\n    }\n}\n\nexport const actionFetchingBoard = (id) => {\n    return {\n        type: 'FETCHING_BOARD',\n        payload: id\n    }\n}\n\nexport const actionFailedFetchBoard = (error) => {\n    return {\n        type: 'FAILED_FETCH_BOARD',\n        payload: error\n    }\n}\n\nexport const actionBoardFetched = (board) => {\n    return {\n        type: 'FETCHED_BOARD',\n        payload: board\n    }\n}\n\nexport const actionFetchingBoards = () => {\n    return {\n        type: 'FETCHING_BOARDS',\n        payload: null\n    }\n}\n\nexport const actionFailedFetchBoards = (error) => {\n    return {\n        type: 'FAILED_FETCH_BOARDS',\n        payload: error\n    }\n}\n\nexport const actionBoardsFetched = (boards) => {\n    return {\n        type: 'FETCHED_BOARDS',\n        payload: boards\n    }\n}\n\nexport const actionDisplayCardModal = (cardId) => {\n    return {\n        type: 'DISPLAY_CARD_MODAL',\n        payload: cardId\n    }\n}\n\nexport const actionCloseCardModal = () => {\n    return {\n        type: 'CLOSE_CARD_MODAL',\n        payload: null\n    }\n}","import cardOverview from '../../components/App/Card/CardOverview'\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { failedActionUpdateCardName } from '../../redux/actions/CardActions'\nimport cardServices from '../../services/CardServices'\nimport { \n    actionDisplayCardModal\n\n} from '../../redux/actions/BoardActions'\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        card: state.cardReducer.cards.find(card => ownProps.cardId === card._id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        async updateName(cardId, name) {\n            try {\n                await cardServices.updateCardNameApi(cardId, name)\n            } catch (error) {\n                console.log(error)\n                return dispatch(failedActionUpdateCardName(error))\n            }\n        },\n        displayCardModal(cardId){\n            dispatch(actionDisplayCardModal(cardId))\n        }\n    }\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(cardOverview));","import React, { Component } from 'react';\nimport CardOverviewContainer from '../../../containers/CardContainers/CardOverviewContainer';\nimport { Segment, Container, List } from 'semantic-ui-react'\nimport './List.css'\n\nclass MyList extends Component {\n\n    render() {\n        return (\n            <Segment className='myList'>\n                <h3>{this.props.list.name}</h3>\n                <Container className='items'>\n                    <List >\n                        {this.props.list.cards.map(cardId => (\n                            <List.Item><CardOverviewContainer key={cardId} cardId={cardId} /></List.Item>\n                        ))}\n                    </List>\n                </Container>\n                <input onKeyDown={(event) => event.keyCode === 13 ? this.props.addCard(event.target.value, this.props.list._id) : null}></input>\n            </Segment>\n        )\n    }\n}\n\nexport default MyList","import { connect } from 'react-redux';\nimport listServices from '../../services/ListServices'\nimport cardServices from '../../services/CardServices'\nimport {actionUpdateListName, failedActionUpdateListName} from '../../redux/actions/ListActions'\nimport { failedActionAddCard } from '../../redux/actions/CardActions'\nimport list from '../../components/App/List/index'\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        list: state.listReducer.lists.find(list => list._id === ownProps.listId)\n    }\n};\n\nconst mapDispatchToProps = (dispatch, onwProps) => {\n    return {\n        async updateListName(list) {\n            try {\n                await listServices.updateListNameApi(list._id, list.name)\n            } catch(error) {\n                dispatch(failedActionUpdateListName(error))\n            }\n        },\n        async addCard(name, listId) {\n            try {\n                await cardServices.addCardApi(name, listId)\n            } catch(error) {\n                console.log(error)\n                return dispatch(failedActionAddCard(error))\n            }\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(list);","export const actionUpdateListName = (list) => {\n    return {\n        type: 'UPDATE_LIST_NAME',\n        payload: list\n    }\n}\n\nexport const failedActionUpdateListName = (error) => {\n    return {\n        type: 'FAILED_UPDATE_LIST_NAME',\n        payload: error\n    }\n}\n\nexport const actionAddList = (list) => {\n    return {\n        type: 'ADD_LIST',\n        payload: list\n    }\n}\n\nexport const failedActionAddList = (error) => {\n    return {\n        type: 'FAILED_ADD_LIST',\n        payload: error\n    }\n}","import React, { Component } from 'react';\nimport { Segment, Container, List } from 'semantic-ui-react'\nimport './NewList.css'\n\nclass NewList extends Component {\n\n    render(){\n        return (\n            <Segment className='myList'>\n                <input placeholder=\"Create a new list\" onKeyDown={(event) => event.keyCode === 13 ? this.props.addList(event.target.value, this.props.boardId) : null }></input>\n            </Segment>\n        )\n    }\n}\n\nexport default NewList","import { connect } from 'react-redux';\nimport listServices from '../../services/ListServices'\nimport { failedActionAddList } from '../../redux/actions/ListActions'\nimport newList from '../../components/App/List/NewList'\n\nconst mapStateToProps = state => {\n    console.log(state.boardReducer.currentBoard._id)\n    return {\n        boardId: state.boardReducer.currentBoard._id\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        async addList(name, boardId) {\n            try {\n                await listServices.addListApi(name, boardId)\n            } catch(error) {\n                console.log(error)\n                dispatch(failedActionAddList(error))\n            }\n        }\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(newList);","import React, { Component } from 'react';\r\nimport './Menu.css'\r\nimport { Button, Icon, Divider } from 'semantic-ui-react'\r\n\r\nclass Menu extends Component {\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p>Ajouter a la carte</p>\r\n                    <Button.Group vertical size='medium' compact>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='users' />\r\n                            Members\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='tag' />\r\n                            Labels\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='check square outline' />\r\n                            Checklist\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='calendar check' />\r\n                            Due date\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='paperclip' />\r\n                            Attachments\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n                <Divider />\r\n                <div>\r\n                    <p>Actions</p>\r\n                    <Button.Group vertical size='medium' compact>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='arrow right' />\r\n                            Move\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='copy' />\r\n                            Copy\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='eye' />\r\n                            Watch\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='archive' />\r\n                            Archive\r\n                        </Button>\r\n                        <Button icon labelPosition='left'>\r\n                            <Icon name='share' />\r\n                            Share\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Menu","import React from 'react';\r\nimport './Members.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        <p>Members</p>\r\n        <Icon name='plus' />\r\n    </div>\r\n)","import React from 'react';\r\nimport './Labels.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        <p>Labels</p>\r\n        <div className=\"displayRow\">\r\n            {props.labels.map(label => <p className=\"label\" style={{ background: label.color }}>{label.name}</p>)}\r\n            <Icon name='plus' />\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './DueDate.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        <p>Due date</p>\r\n        <div className=\"displayRow\">\r\n            <Icon name={props.isCompleted ? 'calendar check' : 'window close outline'} />\r\n            <p>{props.date}</p>\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Attachments.css'\r\nimport { Image, Button, Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='paperclip' />\r\n        <div>\r\n            <p>Attachments</p>\r\n            {props.attachments.map(attachment =>\r\n                <div className=\"attachment\">\r\n                    <div className='image'>\r\n                        <Image src={attachment.url} size='mini' />\r\n                    </div>\r\n                    <div>\r\n                        <p>{attachment.name}</p>\r\n                        <div className=\"displayRow\">\r\n                            <p>{attachment.dateadded}</p>\r\n                            <Button>Comment</Button>\r\n                            <Button>Delete</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n            }\r\n            <Button>Add attachment</Button>\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './CheckList.css'\r\nimport { Progress, Form, Button, Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className}>\r\n        {props.checklists.map(checklist =>\r\n            <div className=\"checklist displayRow\">\r\n                <Icon name='check square outline' />\r\n                <div className=\"progress\">\r\n                    <p className=\"title\">{checklist.title} <Button>Delete</Button></p>\r\n                    <Progress total={checklist.items.length} percent={checklist.items.filter(item => item.isChecked).length / checklist.items.length * 100} indicating size='tiny' progress />\r\n                    <div>{checklist.items.map(item => <Form.Checkbox checked={item.isChecked} label={item.name} />)}</div>\r\n                    <Button className=\"addItem\">Add item</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n\r\n        {console.log(props)}\r\n    </div>\r\n)","import React from 'react';\r\nimport './Comment.css'\r\nimport { Form, TextArea, Button, Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='comment outline' />\r\n        <Form className=\"form\">\r\n            <p>\r\n                Add comment\r\n                            </p>\r\n            <Form.Field>\r\n                <TextArea rows={2} placeholder='Write a comment...' />\r\n            </Form.Field>\r\n            <Button type='submit'>Submit</Button>\r\n        </Form>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Activity.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='tasks' />\r\n        <p>Activity</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Description.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='align left' />\r\n        <div>\r\n            <p>Description</p>\r\n            <p onClick={props.textToTextInput}>\r\n                {props.description}\r\n            </p>\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport './Header.css'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nexport default (props) => (\r\n    <div className={props.className + \" displayRow\"}>\r\n        <Icon name='file alternate outline' />\r\n\r\n        <div>\r\n            <p>\r\n                {props.name}\r\n            </p>\r\n            <p>\r\n                to list {props.list}\r\n            </p>\r\n        </div>\r\n    </div>\r\n)","import React, { Component } from 'react';\r\nimport './CardDetail.css'\r\nimport { TextArea, Icon, Divider, Form, Button, Loader } from 'semantic-ui-react'\r\nimport Menu from \"./SubComponents/Menu\"\r\nimport Members from \"./SubComponents/Members\"\r\nimport Labels from \"./SubComponents/Labels\"\r\nimport DueDate from \"./SubComponents/DueDate\"\r\nimport Attachments from './SubComponents/Attachments';\r\nimport CheckList from './SubComponents/CheckList';\r\nimport Comment from './SubComponents/Comment';\r\nimport Activity from './SubComponents/Activity';\r\nimport Description from './SubComponents/Description';\r\nimport Header from './SubComponents/Header';\r\n\r\nclass CardDetail extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.textToTextInput = this.textToTextInput.bind(this)\r\n        this.updateName = this.updateName.bind(this)\r\n        this.state = {\r\n            isNameUpdating: false,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchCard(this.props.match.params.cardId)\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        console.log(window.innerWidth)\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n\r\n    textToTextInput() {\r\n        this.setState({\r\n            isNameUpdating: true\r\n        })\r\n    }\r\n\r\n    updateName(name) {\r\n        this.setState({\r\n            isNameUpdating: false\r\n        })\r\n        this.props.updateName(this.props.card._id, name)\r\n    }\r\n\r\n    render() {\r\n        return this.props.card.name != null ?\r\n                        <div className=\"displayColumn main\">\r\n                                <Header name={this.props.card.name} list={this.props.card.list} ></Header>\r\n                                <Divider />\r\n                                <div className={this.state.width > 600 ? \"displayRow main\" : \"main\"}>\r\n                                    <div className=\"details main\">\r\n                                        {(this.props.card.members && this.props.card.members.length !== 0) || (this.props.card && this.props.card.labels.length !== 0) || this.props.card.duedate\r\n                                            ? <div>\r\n                                                <div className=\"inline\">\r\n                                                    <Icon name='tags' />\r\n                                                    {this.props.card.members && this.props.card.members.length !== 0\r\n                                                        ? <Members className=\"membersContainer\" members={this.props.card.members}></Members>\r\n                                                        : \"\"}\r\n                                                    {this.props.card.labels && this.props.card.labels.length !== 0\r\n                                                        ? <Labels className=\"labelsContainer\" labels={this.props.card.labels}></Labels>\r\n                                                        : \"\"}\r\n                                                    {this.props.card.duedate\r\n                                                        ? <DueDate className=\"duedateContainer\" date={this.props.card.duedate} isCompleted={false}></DueDate>\r\n                                                        : \"\"}\r\n                                                </div>\r\n                                                <Divider />\r\n                                            </div>\r\n                                            : \"\"}\r\n                                        {this.props.card.desc\r\n                                            ? <div>\r\n                                                <Description description={this.props.card.desc}></Description>\r\n                                                <Divider />\r\n                                            </div>\r\n                                            : <div>\r\n                                                <div className={\"displayRow\"}>\r\n                                                    <Icon name='align left' />\r\n                                                    <Form className=\"form\">\r\n                                                        <p>Describe me</p>\r\n                                                        <Form.Field>\r\n                                                            <TextArea rows={2} placeholder=\"Describe me...\" />\r\n                                                        </Form.Field>\r\n                                                        <Button type='submit'>Submit</Button>\r\n                                                    </Form>\r\n                                                </div>\r\n                                                <Divider />\r\n                                            </div>}\r\n\r\n                                        {this.props.card.attachments && this.props.card.attachments.length !== 0\r\n                                            ? <div>\r\n                                                <Attachments className=\"attachmentsContainer\" attachments={this.props.card.attachments}></Attachments>\r\n                                                <Divider />\r\n                                            </div>\r\n                                            : \"\"}\r\n                                        {this.props.card.checklists && this.props.card.checklists.length !== 0\r\n                                            ? <div>\r\n                                                <CheckList className=\"checkListContainer\" checklists={this.props.card.checklists}></CheckList>\r\n                                                <Divider />\r\n                                            </div>\r\n                                            : \"\"}\r\n                                        <Comment></Comment>\r\n                                        <Divider />\r\n                                        <Activity></Activity>\r\n                                    </div>\r\n                                    <Menu />\r\n                                </div>\r\n                            </div>\r\n                             : <Loader />\r\n    }\r\n}\r\n\r\nexport default CardDetail\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { actionCardFetched, failedActionGetCard } from '../../redux/actions/CardActions'\r\nimport cardServices from '../../services/CardServices'\r\nimport CardDetail from '../../components/App/Card/CardDetail';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        card: state.cardModalReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        async fetchCard(cardId) {\r\n            try {\r\n                const card = await cardServices.fetchCard(cardId)\r\n                return dispatch(actionCardFetched(card))\r\n            } catch (error) {\r\n                return dispatch(failedActionGetCard())\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CardDetail));","import React, { Component } from 'react';\nimport './Board.css'\nimport ListContainer from '../../../../containers/ListContainers/ListContainer';\nimport NewListContainer from '../../../../containers/ListContainers/NewListContainer';\nimport CardDetailContainer from '../../../../containers/CardContainers/CardDetailContainer'\nimport { List, Button, Modal } from 'semantic-ui-react'\n\nclass Board extends Component {\n\n    componentWillMount() {\n        this.props.subscribe()\n        const cardId = this.props.match.params.cardId\n        if(cardId != null){\n            this.props.fetchCard(cardId)\n        } else { \n            this.props.fetchBoard(this.props.match.params.boardId)\n        }\n\n        this.setState = {\n            cardId: this.props.match.params.cardId\n        }\n    }\n\n\n    render() {\n        return (\n            <List className='board'>\n                {this.props.board.lists.map(listId => (\n                    <List.Item className='no-padding-top'><ListContainer key={listId} listId={listId} /></List.Item>\n                ))}\n                <List.Item className='no-padding-top'><NewListContainer /></List.Item>\n\n                <Modal\n                    open={this.props.cardModal._id != null}\n                    onClose={() => {\n                        this.props.history.push(`/boards/${this.props.board._id}`)\n                        this.props.closeCardModal()\n                    }}>\n                    <Modal.Content image>\n                        <CardDetailContainer key={this.props.cardModal._id} cardId={this.props.cardModal._id}></CardDetailContainer>\n                    </Modal.Content>\n                </Modal>\n            </List>\n\n        );\n    }\n}\n\nexport default Board","\nimport io from 'socket.io-client';\nimport urlConfig from '../config/UrlConfig'\n\nconst socket = io(urlConfig.SOCKET)\n\nsocket.on(\"connect\", () => {\n    console.log(\"Connected !\")\n})\n\nsocket.on(\"error\", (error) => {\n    console.log(error)\n})\n\nexport default {\n    subscribe(boardId) {\n        socket.emit(\"subscribeToBoard\")\n    },\n    init( store ){\n        socket.on( \"action\", ( action ) => \n            store.dispatch(action) \n        )\n    },\n    emit( type, payload ) {\n        socket.emit( type, payload )\n    }\n}","import axios from 'axios'\nimport UrlConfig from '../config/UrlConfig'\nimport { tokenHeader } from '../config/HeaderHelper'\n\nexport default {\n    async fetchBoard(boardId) {\n        try{\n            const res = await axios.get(`${UrlConfig.API}/boards/${boardId}`, tokenHeader)\n            return res.data\n        } catch (e) {\n            console.log(e)\n            throw e\n        }    \n    },\n    async fetchBoards() {\n        try{\n            const res = await axios.get(`${UrlConfig.API}/boards`, tokenHeader)\n            return res.data\n        } catch (e) {\n            console.log(e)\n            throw e\n        }\n    }\n}","import board from '../../components/App/Board/Board'\nimport { connect } from 'react-redux';\nimport socketService from '../../services/SocketService'\nimport boardServices from '../../services/BoardServices'\nimport cardServices from '../../services/CardServices'\nimport { \n    actionBoardSubscribe, \n    actionFetchingBoard, \n    actionFailedFetchBoard, \n    actionBoardFetched,\n    actionCloseCardModal\n} from '../../redux/actions/BoardActions'\nimport { \n    actionFetchingCard,\n    actionCardFetched,\n    actionFailedCardFetched\n} from '../../redux/actions/CardActions'\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardReducer.currentBoard,\n        cardModal: state.cardModalReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        subscribe(){\n            socketService.subscribe()\n            dispatch(actionBoardSubscribe())\n        },\n        async fetchBoard(id){\n            try {\n                dispatch(actionFetchingBoard(id))\n                const board = await boardServices.fetchBoard(id)\n                dispatch(actionBoardFetched(board))\n            } catch(error) {\n                return dispatch(actionFailedFetchBoard(error))\n            }\n        },\n        async fetchCard(cardId){\n            try {\n                dispatch(actionFetchingCard(cardId))\n                const card = await cardServices.fetchCard(cardId)\n                dispatch(actionCardFetched(card))\n                dispatch(actionFetchingBoard(card.board))\n                const board = await boardServices.fetchBoard(card.board)\n                return dispatch(actionBoardFetched(board))\n            } catch(error){\n                return dispatch(actionFailedCardFetched(error))\n            }\n        },\n        closeCardModal(){\n            dispatch(actionCloseCardModal())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(board);","import React, { Component } from 'react';\nimport '../../Card/CardOverview/CardOverview'\nimport {List, Segment} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nclass BoardOverview extends Component {\n\n    componentWillMount(){\n        this.props.subscribe()\n    }\n\n    render(){\n        return (\n            <Segment className='cardOverview'>\n                <Link to={`/boards/${this.props.board._id}`}>\n                    {this.props.board ? this.props.board.name: \"\"}\n                </Link>\n            </Segment>\n        );\n    }\n}\n\nexport default BoardOverview","import BoardOverview from '../../components/App/Board/BoardOverview/BoardOverview'\nimport { connect } from 'react-redux';\nimport socketService from \"../../services/SocketService\";\nimport {actionBoardSubscribe} from \"../../redux/actions/BoardActions\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        board: state.boardReducer.boards.find(board => ownProps.boardId === board._id)\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        subscribe(){\n            socketService.subscribe()\n            dispatch(actionBoardSubscribe())\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BoardOverview);","import React, {Component} from 'react';\nimport '../Board/Board.css'\nimport BoardOverviewContainer from '../../../../containers/BoardContainer/BoardOverviewContainer'\nimport {List} from 'semantic-ui-react'\n\nclass ListBoards extends Component {\n\n    componentWillMount() {\n        this.props.subscribe()\n        this.props.fetchBoards()\n    }\n\n    render() {\n        return (\n            <List className='board'>\n                {this.props.boards.map(boardId => (\n                    <List.Item className='no-padding-top'><BoardOverviewContainer key={boardId} boardId={boardId}/>\n                    </List.Item>\n                ))}\n            </List>\n        );\n    }\n}\n\nexport default ListBoards","import { connect } from 'react-redux';\nimport socketService from '../../services/SocketService'\nimport boardServices from '../../services/BoardServices'\nimport listBoards from '../../components/App/Board/ListBoards/ListBoards'\nimport { actionBoardSubscribe, actionFetchingBoards, actionFailedFetchBoards, actionBoardsFetched } from '../../redux/actions/BoardActions'\n\nconst mapStateToProps = state => {\n    return {\n        boards: state.boardReducer.boards.map(board => board._id)\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        subscribe(){\n            socketService.subscribe()\n            dispatch(actionBoardSubscribe())\n        },\n        async fetchBoards(){\n            try {\n                dispatch(actionFetchingBoards())\n                const boards = await boardServices.fetchBoards()\n                dispatch(actionBoardsFetched(boards))\n            } catch(error) {\n                return dispatch(actionFailedFetchBoards(error))\n            }\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(listBoards);","import React, { Component } from 'react';\r\nimport './Header.css'\r\nimport { Segment, Dropdown, Button, Search } from 'semantic-ui-react'\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Segment inverted color='teal' className=\"inline header\" size='mini'>\r\n                <div className=\"inline\">\r\n                    <Button icon='home' />\r\n                    <Dropdown text='Boards' icon='flipboard' floating labeled button className='icon'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header icon='tags' content='Boards' />\r\n                            <Dropdown.Item>Important</Dropdown.Item>\r\n                            <Dropdown.Item>Announcement</Dropdown.Item>\r\n                            <Dropdown.Item>Discussion</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Search results={[{ title: \"yo\", description: \"mdr\" }]} size=\"small\" className=\"search\"></Search>\r\n                </div>\r\n                <div>\r\n                    <p className=\"appname\">Prello</p>\r\n                </div>\r\n                <div className=\"inline\">\r\n                    <Dropdown\r\n                        button\r\n                        className='icon'\r\n                        floating\r\n                        labeled\r\n                        icon='plus'\r\n                        options={[{ key: 'Arabic', text: 'Arabic', value: 'Arabic' }]}\r\n                        text='Create'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header content='Create' />\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item>Create a board</Dropdown.Item>\r\n                            <Dropdown.Item>Create a team</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown\r\n                        button\r\n                        className='icon'\r\n                        floating\r\n                        labeled\r\n                        icon='bell outline'\r\n                        options={[{ key: 'Arabic', text: 'Arabic', value: 'Arabic' }]}\r\n                        text='Notifications'\r\n                    />\r\n                    <Dropdown\r\n                        button\r\n                        className='icon'\r\n                        floating\r\n                        labeled\r\n                        icon='user outline'\r\n                        text='User'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header content='name' />\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item>Profile</Dropdown.Item>\r\n                            <Dropdown.Item>Cards</Dropdown.Item>\r\n                            <Dropdown.Item>Settings</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item>Change language</Dropdown.Item>\r\n                            <Dropdown.Item>Log out</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import { createBrowserHistory } from 'history'\n\nlet history = createBrowserHistory()\n\nexport { history }","import React, { Component } from \"react\";\nimport { Route, Switch, Link, BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport BoardContainer from './containers/BoardContainer/BoardContainer';\nimport ListBoardContainer from \"./containers/BoardContainer/ListBoardContainer\";\nimport Header from \"./components/App/Header\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport { history } from './history'\n\nclass App extends Component {\n  render() {\n    return (\n      <ConnectedRouter history={history}>\n        <div className=\"App\">\n          <Header className=\"header\" />\n          <Link to=\"/login\">Home</Link> <Link to=\"/\">About</Link> <Link to=\"/contact\">Contact</Link> <Link to=\"/boards\">Boards</Link>\n          <Switch>\n            <Route exact path=\"/login\"  />\n            <Route exact path=\"/boards\"  component={ListBoardContainer} />\n            <Route exact path=\"/boards/:boardId\" component={BoardContainer} />\n            <Route exact path=\"/card/:cardId\" component={BoardContainer} />\n            <Route path=\"\">\n              <div>\n                <p className=\"App-intro\">Salut</p>\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      </ConnectedRouter>\n    );\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultCardReducer = {\n  cards: []\n}\n\nexport default (state = defaultCardReducer, action) => {\n  switch (action.type) {\n    case \"FETCHED_BOARD\":\n      const board = action.payload\n      return {\n          ...state,\n          cards: board.lists.flatMap(list => list.cards) \n      }\n    case 'CARD_FETCHED':\n      return {\n        ...state,\n        card: action.payload.payload,\n        error: null\n      }\n    case 'FAILED_GET_CARD':\n      return {\n        ...state,\n        error: action.payload\n      }\n    case 'ADD_CARD':\n      const card = action.payload\n      return {\n          ...state,\n          cards: [...state.cards, card]\n          \n      }\n    case 'UPDATE_CARD_NAME':\n        return {\n            ...state,\n            cards: state.cards.map(card => card._id === action.payload._id ? action.payload : card)\n        }\n    default:\n      return state\n  }\n}","const defaultBoardReducer = {\n    fetching: false,\n    currentBoard: {\n        _id: \"\",\n        name: \"\",\n        lists: []\n    },\n    boards: [{\n        _id: 'board1',\n        name: 'tata'\n    },{\n        _id: 'board2',\n        name: 'toto'\n    }\n    ]\n}\n\nexport default (state = defaultBoardReducer, action) => {\n    switch (action.type) {\n        case \"FETCHED_BOARD\":\n            const board = action.payload\n            return {\n                ...state,\n                currentBoard: {\n                    ...board,\n                    lists: board.lists.map(list => list._id)\n                }\n            }\n        case \"FETCHING_BOARD\":\n            return {\n                ...state,\n                fetching: true\n            }\n        case \"FETCHED_BOARDS\":\n            return {\n                ...state,\n                boards: [...action.payload]\n            }\n        case \"FETCHING_BOARDS\":\n            return {\n                ...state,\n                fetching: true\n            }\n        case 'BOARD_SUBSCRIBE':\n            return {\n                ...state\n            }\n        case 'GET_BOARD':\n            return {\n                ...state,\n                currentBoard: action.payload,\n                error: null\n            }\n        case 'FAILED_FETCH_BOARD':\n            return {\n                ...state,\n                error: action.payload\n            }\n        case 'FAILED_FETCH_BOARDS':\n            return {\n                ...state,\n                error: action.payload\n            }\n        case 'ADD_LIST':\n            const list = action.payload\n            return {\n                ...state,\n                currentBoard: {\n                    ...state,\n                    lists: [...state.currentBoard.lists, list._id]}\n            }\n        case 'FAILED_UPDATE_LIST_NAME':\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","const defaultListReducer = {\n    lists: []\n}\n\nexport default (state = defaultListReducer, action) => {\n    switch (action.type) {\n        case \"FETCHED_BOARD\":\n            const board = action.payload\n            const lists = board.lists.map(list => ({\n                ...list,\n                cards: list.cards.map(card => card._id)\n            }))\n            return {\n                ...state,\n                lists: lists\n            }\n        case 'ADD_CARD':\n            const card = action.payload\n            return {\n                ...state,\n                lists: state.lists.map(list => card.list === list._id ? {\n                    ...list,\n                    cards: [ ...list.cards, card._id ]\n                 } : list)\n                \n            }\n        case 'ADD_LIST':\n            const list = action.payload\n            return {\n                ...state,\n                lists: [ ...state.lists, {\n                    ...list,\n                    cards: []\n                }]\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","const defaultCardModalReducer = {\n    _id: null\n  }\n  \n  export default (state = defaultCardModalReducer, action) => {\n    switch (action.type) {\n        case 'DISPLAY_CARD_MODAL':\n              return {\n                  ...state,\n                  _id: action.payload\n              }\n        case 'CARD_FETCHED':\n        console.log(\"mdr\")\n              return {\n                  ...state,\n                  ...action.payload\n              }\n        case 'CLOSE_CARD_MODAL':\n              return {\n                  ...defaultCardModalReducer\n              }\n      default:\n        return state\n    }\n  }","import {combineReducers} from 'redux';\nimport cardReducer from './CardReducer';\nimport boardReducer from './BoardReducer';\nimport listReducer from './ListReducer';\nimport cardModalReducer from './CardModalReducer';\nexport default combineReducers({\n cardReducer,\n boardReducer,\n listReducer,\n cardModalReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './redux/store'\nimport 'semantic-ui-css/semantic.min.css';\nimport 'normalize.css'\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>, \n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/RootReducer';\nimport socketIO from '../services/SocketService'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { history } from '../history'\n\nexport default function configureStore(initialState={}) {\n    const store = createStore(\n        connectRouter(history)(rootReducer), \n        window.__REDUX_DEVTOOLS_EXTENSION__ ? \n            compose(\n                applyMiddleware(routerMiddleware(history), thunk), window.__REDUX_DEVTOOLS_EXTENSION__()\n            ) : \n            compose(\n                applyMiddleware(routerMiddleware(history), thunk)\n            )\n    );\n    socketIO.init(store)\n    return store\n}"],"sourceRoot":""}